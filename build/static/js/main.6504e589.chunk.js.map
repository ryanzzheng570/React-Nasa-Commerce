{"version":3,"sources":["component/AppBar/Appbar.js","component/Buttons/LikedButton.js","component/Buttons/ShareButton.js","component/Image/ImageModal.js","component/Image/Images.js","component/MainPage.js","themes/theme.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","container","flexGrow","appBar","background","search","marginLeft","color","palette","primary","main","Appbar","handleDateSearch","classes","className","AppBar","position","Toolbar","Typography","variant","IconButton","onClick","fontSize","liked","LikedButton","useState","isLiked","setIsLiked","showToolTip","setShowToolTip","handleToolTipClose","ClickAwayListener","onClickAway","Tooltip","PopperProps","disablePortal","onClose","open","disableFocusListener","disableHoverListener","disableTouchListener","title","placement","ShareButton","imageUrl","isShareLinkCopied","setIsShareLinkCopied","handleShareToolTipClose","url","navigator","clipboard","writeText","maxWidth","spacing","marginBottom","media","height","explanation","maxHeight","overflowY","width","backgroundColor","outline","content","paper","border","boxShadow","shadows","modal","display","alignItems","justifyContent","hdimage","ImageModal","image","isOpen","setIsOpen","Card","CardActionArea","CardMedia","CardContent","gutterBottom","component","date","CardActions","Modal","closeAfterTransition","Fade","in","src","hdurl","alt","Images","images","length","map","imageJSON","index","root","grey","imageContainer","paddingTop","form","chebox","marginTop","btn","MainPage","imageJSONList","setImageJSON","isDateSearch","setIsDateSearch","moment","format","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","isSpecificDate","setIsSpecificDate","getImageJSONFromNASA","startDate","endDate","isDateSpecific","a","dataList","nasaAPI","process","dateRange","concat","axios","get","data","push","useEffect","Collapse","elevation","Paper","onSubmit","e","preventDefault","TextField","id","label","type","value","InputLabelProps","shrink","onChange","target","disabled","FormControlLabel","control","Checkbox","checked","Button","Grid","createTheme","typography","fontFamily","textAlign","button","textTransform","letterSpacing","padding","secondary","App","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6504e589.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    IconButton\r\n} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        background: 'linear-gradient(45deg, #3b53da 45%, #289cff, white)'\r\n    },\r\n    search: {\r\n        marginLeft: 'auto',\r\n        color: theme.palette.primary.main\r\n    }\r\n}));\r\n\r\n//App Bar Hook\r\nconst Appbar = ({ handleDateSearch }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <AppBar position='static' className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant='h6'>\r\n                        NASA Astronomy Picture Of The Day\r\n                    </Typography>\r\n                    <IconButton onClick={handleDateSearch} className={classes.search} aria-label=\"search\" color=\"inherit\">\r\n                        <SearchIcon fontSize='medium' />\r\n                        <Typography>Search by Date</Typography>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Appbar\r\n","import React, { useState } from 'react'\r\nimport {\r\n    IconButton,\r\n    ClickAwayListener,\r\n    Tooltip\r\n} from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\n//Styling\r\nconst useStyles = makeStyles((theme) => ({\r\n    liked: {\r\n        color: 'red'\r\n    }\r\n}));\r\n\r\n//Like Button Hook\r\nconst LikedButton = () => {\r\n    const classes = useStyles();\r\n\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    const [showToolTip, setShowToolTip] = useState(false);\r\n\r\n    //Handler for Like image\r\n    const handleLikeImage = () => {\r\n        setIsLiked(!isLiked);\r\n        setShowToolTip(true);\r\n    }\r\n\r\n    //Handler to close tool tip\r\n    const handleToolTipClose = () => {\r\n        setShowToolTip(false);\r\n    }\r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={handleToolTipClose}>\r\n            <Tooltip\r\n                PopperProps={{\r\n                    disablePortal: true,\r\n                }}\r\n                onClose={handleToolTipClose}\r\n                open={showToolTip}\r\n                disableFocusListener\r\n                disableHoverListener\r\n                disableTouchListener\r\n                title={isLiked ? \"Liked\" : \"Unliked\"}\r\n                placement='top'\r\n            >\r\n                <IconButton onClick={handleLikeImage}>\r\n                    <FavoriteIcon className={isLiked ? classes.liked : ''} />\r\n                </IconButton>\r\n            </Tooltip>\r\n        </ClickAwayListener>\r\n    )\r\n}\r\n\r\nexport default LikedButton\r\n","import React, { useState } from 'react'\r\nimport {\r\n    IconButton,\r\n    ClickAwayListener,\r\n    Tooltip\r\n} from '@material-ui/core';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\n\r\n//Share Button Hook\r\nconst ShareButton = ({ imageUrl }) => {\r\n    const [isShareLinkCopied, setIsShareLinkCopied] = useState(false);\r\n\r\n    //Handler to share the iamge Link\r\n    const handleShareImageLink = (url) => {\r\n        navigator.clipboard.writeText(url);\r\n        setIsShareLinkCopied(true);\r\n    }\r\n\r\n    //Handler to close the Copied tooltip\r\n    const handleShareToolTipClose = () => {\r\n        setIsShareLinkCopied(false);\r\n    }\r\n    return (\r\n        <ClickAwayListener onClickAway={handleShareToolTipClose}>\r\n            <Tooltip\r\n                PopperProps={{\r\n                    disablePortal: true,\r\n                }}\r\n                onClose={handleShareToolTipClose}\r\n                open={isShareLinkCopied}\r\n                disableFocusListener\r\n                disableHoverListener\r\n                disableTouchListener\r\n                title=\"Copied\"\r\n                placement='top'\r\n            >\r\n                <IconButton onClick={() => handleShareImageLink(imageUrl)}>\r\n                    <ShareIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n        </ClickAwayListener>\r\n    )\r\n}\r\n\r\nexport default ShareButton\r\n","import React, { useState } from 'react';\r\nimport {\r\n    Typography,\r\n    Card,\r\n    CardActionArea,\r\n    CardMedia,\r\n    CardActions,\r\n    CardContent,\r\n    Modal,\r\n    Fade,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport LikedButton from '../Buttons/LikedButton';\r\nimport ShareButton from '../Buttons/ShareButton';\r\n\r\n//Styling\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        maxWidth: 400,\r\n        marginLeft: theme.spacing(10),\r\n        marginBottom: theme.spacing(5)\r\n    },\r\n    media: {\r\n        height: 400,\r\n    },\r\n    explanation: {\r\n        maxHeight: 230,\r\n        overflowY: 'auto',\r\n        '&::-webkit-scrollbar': {\r\n            width: '0.2em'\r\n        },\r\n        '&::-webkit-scrollbar-thumb': {\r\n            backgroundColor: 'rgba(0,0,0,.1)',\r\n            outline: '1px solid #f5f5f5'\r\n        }\r\n    },\r\n    content: {\r\n        height: 320\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        width: 1280,\r\n        height: 720\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    hdimage: {\r\n        height: '100%',\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\n//ImageModal Hook\r\nconst ImageModal = ({ image }) => {\r\n    const classes = useStyles();\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    //Handler for larger image clicked\r\n    const handleMediaClicked = () => {\r\n        setIsOpen(true);\r\n    }\r\n\r\n    //Handler to close the larger iamge\r\n    const handleClose = () => {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.container}>\r\n                <CardActionArea onClick={handleMediaClicked}>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={image.url}\r\n                        title={image.title}\r\n                    />\r\n                </CardActionArea>\r\n                <CardContent className={classes.content}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {image.title}\r\n                    </Typography>\r\n                    <Typography gutterBottom variant=\"body2\" color=\"textSecondary\" component='p'>\r\n                        {image.date}\r\n                    </Typography>\r\n                    <Typography className={classes.explanation} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {image.explanation}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <LikedButton />\r\n                    <ShareButton imageUrl={image.url} />\r\n                </CardActions>\r\n            </Card>\r\n            <Modal\r\n                className={classes.modal}\r\n                open={isOpen}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n            >\r\n                <Fade in={isOpen}>\r\n                    <div className={classes.paper}>\r\n                        <img className={classes.hdimage} src={image.hdurl} alt={image.title} />\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImageModal\r\n","import React from 'react'\r\nimport ImageModal from './ImageModal'\r\n\r\nconst Images = ({ images }) => {\r\n    return (\r\n        <>\r\n            {images.length > 0 && images.map((imageJSON, index) => {\r\n                return (\r\n                    <ImageModal key={index} image={imageJSON} />\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Images\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/core'\r\nimport Appbar from './AppBar/Appbar';\r\nimport {\r\n    Grid,\r\n    Collapse,\r\n    Paper,\r\n    TextField,\r\n    Checkbox,\r\n    FormControlLabel,\r\n    Button\r\n} from '@material-ui/core'\r\nimport Images from './Image/Images';\r\n\r\n//Main Page styling\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.grey[100]\r\n    },\r\n    imageContainer: {\r\n        paddingTop: theme.spacing(1),\r\n    },\r\n    search: {\r\n        backgroundColor: 'white',\r\n        height: 70\r\n    },\r\n    form: {\r\n        paddingTop: theme.spacing(1)\r\n    },\r\n    date: {\r\n        marginLeft: theme.spacing(3)\r\n    },\r\n    chebox: {\r\n        marginLeft: theme.spacing(3),\r\n        marginTop: theme.spacing(0.5)\r\n    },\r\n    btn: {\r\n        marginLeft: theme.spacing(3),\r\n        color: 'white',\r\n        marginTop: theme.spacing(0.2)\r\n    }\r\n}));\r\n\r\n//Main Page Hook\r\nconst MainPage = () => {\r\n    const classes = useStyles();\r\n    const [imageJSONList, setImageJSON] = useState([]);\r\n    const [isDateSearch, setIsDateSearch] = useState(false);\r\n    const [selectedStartDate, setSelectedStartDate] = useState(moment().format('YYYY-MM-DD'));\r\n    const [selectedEndDate, setSelectedEndDate] = useState(moment().format('YYYY-MM-DD'));\r\n    const [isSpecificDate, setIsSpecificDate] = useState(false);\r\n\r\n    //Function to retrieve image json from nasa API endpoint\r\n    const getImageJSONFromNASA = async (startDate, endDate, isDateSpecific) => {\r\n        let dataList = [];\r\n        //Base URL for GET request\r\n        let nasaAPI = `https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_API_KEY}`;\r\n        //Apply start date and end date if user specified start date and end date\r\n        if (!isDateSpecific && startDate && endDate) {\r\n            const dateRange = `&start_date=${startDate}&end_date=${endDate}`;\r\n            nasaAPI = nasaAPI.concat(dateRange);\r\n            const { data } = await axios.get(nasaAPI);\r\n            dataList = data;\r\n        }\r\n        else {\r\n            if (isDateSpecific && startDate) {\r\n                nasaAPI = nasaAPI.concat(`&date=${startDate}`)\r\n            }\r\n            const { data } = await axios.get(nasaAPI);\r\n            dataList.push(data);\r\n        }\r\n\r\n        //Set the list to rerender\r\n        setImageJSON(dataList);\r\n    }\r\n\r\n    //Use effect hook\r\n    useEffect(() => {\r\n        getImageJSONFromNASA(null, null, false);\r\n    }, []);\r\n\r\n    //Handler to open date search section\r\n    const handleDateSearch = () => {\r\n        setIsDateSearch(!isDateSearch);\r\n    }\r\n\r\n    //Handler for start date \r\n    const handleStartDate = (e) => {\r\n        setSelectedStartDate(e.target.value);\r\n    }\r\n\r\n    //Handler for end date\r\n    const handleEndDate = (e) => {\r\n        setSelectedEndDate(e.target.value);\r\n    }\r\n\r\n    //Handler for choosing image on a specific date\r\n    const handleSpecificDateCheck = (e) => {\r\n        setIsSpecificDate(e.target.checked);\r\n    }\r\n\r\n    //Submit handler for searching by date\r\n    const onSearchByDate = (e) => {\r\n        e.preventDefault();\r\n        setIsDateSearch(!isDateSearch);\r\n        getImageJSONFromNASA(selectedStartDate, selectedEndDate, isSpecificDate);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Appbar handleDateSearch={handleDateSearch} />\r\n            <Collapse elevation={4} in={isDateSearch}>\r\n                <Paper className={classes.search}>\r\n                    <form className={classes.form} onSubmit={onSearchByDate}>\r\n                        <TextField\r\n                            id='start_date'\r\n                            label='Start Date'\r\n                            type='date'\r\n                            value={selectedStartDate}\r\n                            className={classes.date}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            onChange={handleStartDate}\r\n                        />\r\n                        <TextField\r\n                            id='end_date'\r\n                            label='End Date'\r\n                            type='date'\r\n                            value={selectedEndDate}\r\n                            className={classes.date}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            disabled={isSpecificDate}\r\n                            onChange={handleEndDate}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    id='isSpecificDate'\r\n                                    checked={isSpecificDate}\r\n                                    onChange={handleSpecificDateCheck}\r\n                                    color='primary'\r\n                                />}\r\n                            label=\"On a specific date?\"\r\n                            className={classes.chebox}\r\n                        />\r\n                        <Button\r\n                            color='secondary'\r\n                            variant='contained'\r\n                            className={classes.btn}\r\n                            type='submit'>\r\n                            Search\r\n                        </Button>\r\n                    </form>\r\n                </Paper>\r\n            </Collapse>\r\n            <Grid container justifyContent='center' className={classes.imageContainer}>\r\n                <Images images={imageJSONList} />\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import { createTheme } from \"@material-ui/core\";\r\n\r\n//Theme for Material UI\r\nexport const theme = createTheme({\r\n    spacing: 10,\r\n    typography: {\r\n        fontFamily: \"Open Sans, sans-serif\",\r\n        fontSize: 15,\r\n        textAlign: 'left',\r\n        button: {\r\n            textTransform: \"none\",\r\n            letterSpacing: 0,\r\n            padding: 0\r\n        },\r\n    },\r\n    palette: {\r\n        primary: { main: '#3b53da' },\r\n        secondary: { main: '#289cff' }\r\n    },\r\n});\r\n","import React from \"react\";\nimport MainPage from \"./component/MainPage\";\nimport { MuiThemeProvider } from '@material-ui/core';\nimport { theme } from \"./themes/theme\";\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <MuiThemeProvider theme={theme}>\n        <MainPage />\n      </MuiThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}